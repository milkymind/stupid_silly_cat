let stage;
let layer;
let backgroundImage;

document.getElementById('image-upload').addEventListener('change', handleImageUpload);

function handleImageUpload(event) {
    const file = event.target.files[0];
    const reader = new FileReader();
    
    reader.onload = function(e) {
        const img = new Image();
        img.onload = function() {
            const canvasContainer = document.getElementById('canvas-container');
            canvasContainer.innerHTML = ''; // Clear existing canvas
            const width = 400;
            const height = 400;

            stage = new Konva.Stage({
                container: 'canvas-container',
                width: width,
                height: height
            });

            layer = new Konva.Layer();
            stage.add(layer);

            backgroundImage = new Konva.Image({
                image: img,
                width: width,
                height: height
            });

            layer.add(backgroundImage);
            layer.draw();

            document.getElementById('download-btn').classList.remove('hidden');
        }
        img.src = e.target.result;
    }
    
    reader.readAsDataURL(file);
}

document.querySelectorAll('.template-item').forEach(item => {
    item.addEventListener('click', function () {
        const templateSrc = item.dataset.template;
        addOverlay(templateSrc);
    });
});

function addOverlay(templateSrc) {
    const templateImg = new Image();

    templateImg.onload = function() {
        const img = new Konva.Image({
            image: templateImg,
            draggable: true
        });

        // Add transformers
        const transformer = new Konva.Transformer({
            rotateEnabled: true,
            resizeEnabled: true,
            keepRatio: false
        });
        layer.add(transformer);
        layer.add(img);
        transformer.nodes([img]);

        img.on('transform', function () {
            img.setAttrs({
                width: img.width() * img.scaleX(),
                height: img.height() * img.scaleY(),
                scaleX: 1,
                scaleY: 1,
            });
        });

        img.on('click', () => {
            transformer.nodes([img]);
        });

        layer.draw();
    }

    templateImg.src = templateSrc;
}

document.getElementById('download-btn').addEventListener('click', function () {
    const dataURL = stage.toDataURL({ pixelRatio: 1 });
    const link = document.createElement('a');
    link.href = dataURL;
    link.download = 'customized-image.jpeg';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
});
